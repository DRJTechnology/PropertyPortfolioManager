# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#

name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: PropertyPortfolioManager-dev    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: restore
        run:  dotnet restore ./src/PropertyPortfolioManager.sln
        
      - name: Build with dotnet
        run: dotnet build ./src/PropertyPortfolioManager.sln --configuration Release --no-restore

      - name: dotnet publish
        run: dotnet publish ./src/PropertyPortfolioManager.Server/PropertyPortfolioManager.Server.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp --no-build

      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: '${{env.DOTNET_ROOT}}/myapp/appsettings.json'
        env:
          AzureAd.Instance: ${{ secrets.AZUREAD_INSTANCE }}
          AzureAd.Domain: ${{ secrets.AZUREAD_DOMAIN }}
          AzureAd.TenantId: ${{ secrets.AZUREAD_TENANTID }}
          AzureAd.ClientId: ${{ secrets.AZUREAD_CLIENTID }}
          AzureAd.Scopes: ${{ secrets.AZUREAD_SCOPES }}
          AzureAd.CallbackPath: ${{ secrets.AZUREAD_CALLBACKPATH }}
          AzureAd.ClientSecret: ${{ secrets.AZUREAD_CLIENTSECRET }}
          DRJCache.ConnectionString: ${{ secrets.REDIS_CONNECTIONSTRING }}
          DRJCache.KeyPrefix: ${{ secrets.DRJCACHE_KEYPREFIX }}
          ConnectionStrings.PpmDatabaseConnectionString: ${{ secrets.CONNECTIONSTRINGS_PPMDATABASECONNECTIONSTRING }}
          ConnectionStrings.Redis: ${{ secrets.REDIS_CONNECTIONSTRING }}
          Settings.SharepointSettings.SiteId: ${{ secrets.SETTINGS_SHAREPOINTSETTINGS_SITEID }}
          Settings.SharepointSettings.DriveId: ${{ secrets.SETTINGS_SHAREPOINTSETTINGS_DRIVEID }}
          NLog.targets.database.connectionString: ${{ secrets.CONNECTIONSTRINGS_PPMDATABASECONNECTIONSTRING }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          
    
  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PROPERTYPORTFOLIOMANAGER_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
